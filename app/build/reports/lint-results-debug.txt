/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:16: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk 33
        ~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application runs on a version of Android that is more recent than
   your targetSdkVersion specifies that it has been tested with, various
   compatibility modes kick in. This ensures that your application continues
   to work, but it may look out of place. For example, if the targetSdkVersion
   is less than 14, your app may get an option button in the UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:43: Warning: A newer version of androidx.core:core-ktx than 1.6.0 is available: 1.10.1 [GradleDependency]
    implementation 'androidx.core:core-ktx:1.6.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:44: Warning: A newer version of androidx.appcompat:appcompat than 1.3.1 is available: 1.6.1 [GradleDependency]
    implementation 'androidx.appcompat:appcompat:1.3.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:45: Warning: A newer version of com.google.android.material:material than 1.4.0 is available: 1.9.0 [GradleDependency]
    implementation 'com.google.android.material:material:1.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:46: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.1 is available: 2.1.4 [GradleDependency]
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:47: Warning: A newer version of androidx.recyclerview:recyclerview than 1.2.1 is available: 1.3.0 [GradleDependency]
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:49: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.5.1 is available: 2.6.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:50: Warning: A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.5.1 is available: 2.6.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:51: Warning: A newer version of androidx.lifecycle:lifecycle-runtime-ktx than 2.5.1 is available: 2.6.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:53: Warning: A newer version of androidx.navigation:navigation-fragment-ktx than 2.5.3 is available: 2.6.0 [GradleDependency]
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:54: Warning: A newer version of androidx.navigation:navigation-ui-ktx than 2.5.3 is available: 2.6.0 [GradleDependency]
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:62: Warning: A newer version of androidx.test.ext:junit than 1.1.3 is available: 1.1.5 [GradleDependency]
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/build.gradle:63: Warning: A newer version of androidx.test.espresso:espresso-core than 3.4.0 is available: 3.5.1 [GradleDependency]
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/AndroidManifest.xml:13: Warning: The attribute android:fullBackupContent is deprecated from Android 12 and higher and may be removed in future versions. Consider adding the attribute android:dataExtractionRules specifying an @xml resource which configures cloud backups and device transfers on Android 12 and higher. [DataExtractionRules]
        android:fullBackupContent="@xml/backup_descriptor">
                                   ~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "DataExtractionRules":
   Before Android 12, the attributes android:allowBackup and
   android:fullBackupContent were used to configure all forms of backup,
   including cloud backups, device-to-device transfers and adb backup.

   In Android 12 and higher, these attributes have been deprecated and will
   only apply to cloud backups. You should instead use the attribute
   android:dataExtractionRules, specifying an @xml resource that configures
   which files to back up, for cloud backups and for device-to-device
   transfers, separately. If your minSdkVersion supports older versions,
   you'll still want to specify an android:fullBackupContent resource if the
   default behavior is not right for your app.

   https://developer.android.com/about/versions/12/backup-restore#xml-changes

/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/values-night/themes.xml:13: Warning: Unnecessary; SDK_INT is always >= 21 [ObsoleteSdkInt]
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
                                            ~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/values/themes.xml:13: Warning: Unnecessary; SDK_INT is always >= 21 [ObsoleteSdkInt]
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
                                            ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/OneViewModel.kt:28: Warning: This field leaks a context object [StaticFieldLeak]
    val context: Context
    ~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "StaticFieldLeak":
   A static field will leak contexts.

   Non-static inner classes have an implicit reference to their outer class.
   If that outer class is for example a Fragment or Activity, then this
   reference means that the long-running handler/loader/task will hold a
   reference to the activity which prevents it from getting garbage
   collected.

   Similarly, direct field references to activities and fragments from these
   longer running instances can cause leaks.

   ViewModel classes should never point to Views or non-application Contexts.

/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "MonochromeLauncherIcon":
   If android:roundIcon and android:icon are both in your manifest, you must
   either remove the reference to android:roundIcon if it is not needed; or,
   supply the monochrome icon in the drawable defined by the android:roundIcon
   and android:icon attribute.

   For example, if android:roundIcon and android:icon are both in the
   manifest, a launcher might choose to use android:roundIcon over
   android:icon to display the adaptive app icon. Therefore, your themed
   application iconwill not show if your monochrome attribute is not also
   specified in android:roundIcon.

/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/drawable/jetbrains.png: Warning: Found bitmap drawable res/drawable/jetbrains.png in densityless folder [IconLocation]

   Explanation for issues of type "IconLocation":
   The res/drawable folder is intended for density-independent graphics such
   as shapes defined in XML. For bitmaps, move it to drawable-mdpi and
   consider providing higher and lower resolution versions in drawable-ldpi,
   drawable-hdpi and drawable-xhdpi. If the icon really is density independent
   (for example a solid color) you can place it in drawable-nodpi.

   https://developer.android.com/guide/practices/screens_support.html

/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/TwoFragment.kt:34: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        _binding.starsView.text = "${item.stargazersCount} stars"
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/TwoFragment.kt:34: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        _binding.starsView.text = "${item.stargazersCount} stars"
                                                          ~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/TwoFragment.kt:35: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        _binding.watchersView.text = "${item.watchersCount} watchers"
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/TwoFragment.kt:35: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        _binding.watchersView.text = "${item.watchersCount} watchers"
                                                           ~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/TwoFragment.kt:36: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        _binding.forksView.text = "${item.forksCount} forks"
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/TwoFragment.kt:36: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        _binding.forksView.text = "${item.forksCount} forks"
                                                     ~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/TwoFragment.kt:37: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        _binding.openIssuesView.text = "${item.openIssuesCount} open issues"
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/kotlin/jp/co/yumemi/android/code_check/TwoFragment.kt:37: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        _binding.openIssuesView.text = "${item.openIssuesCount} open issues"
                                                               ~~~~~~~~~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/layout/fragment_two.xml:26: Warning: Hardcoded string "JetBrains/kotlin", should use @string resource [HardcodedText]
        android:text="JetBrains/kotlin"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/layout/fragment_two.xml:46: Warning: Hardcoded string "Written in Kotlin", should use @string resource [HardcodedText]
        android:text="Written in Kotlin"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/layout/fragment_two.xml:58: Warning: Hardcoded string "38530 stars", should use @string resource [HardcodedText]
        android:text="38530 stars"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/layout/fragment_two.xml:72: Warning: Hardcoded string "38530 watchers", should use @string resource [HardcodedText]
        android:text="38530 watchers"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/layout/fragment_two.xml:86: Warning: Hardcoded string "4675 forks", should use @string resource [HardcodedText]
        android:text="4675 forks"
        ~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yamauchihiroto/Documents/work/code-test/yumemi-android-test/app/src/main/res/layout/fragment_two.xml:100: Warning: Hardcoded string "131 open issues", should use @string resource [HardcodedText]
        android:text="131 open issues"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 34 warnings
